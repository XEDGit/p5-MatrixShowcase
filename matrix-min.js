var selected;class Cube{constructor(){}}var singleBoxSize,recording=!0,run=!1,cubes=[],prevSelected=[],imgArray=[];function preload(){if(2==selMode)for(let e=1;e<=imgNumber;e++)imgArray.push(loadImage(resDirectory+"/"+e+resExt))}function setup(){console.log("Settings: you can find them explained at the top of the souce code"),console.log("You can manipulate them as you like, remember to launch init() when finished changing settings to see results"),console.log("Have fun! :D"),angleMode(DEGREES),colorMode(HSB),init()}function init(){if(matrixSize<=0||num<=0||space<0||speed<0||backMult<0||rotationSide>255||rotationSide<0)throw new Error("set settings bigger than 0, then init()");var e=createCanvas(matrixSize,matrixSize,WEBGL);e.mouseOut(function(){recording=!1}),e.mouseOver(function(){recording=!0}),definePoints(),run=!0}function index(e,o){return-1==maxCubes?e*num+o:e*maxCubes+o}function definePoints(){singleBoxSize=matrixSize/num-space/num*(num-1)-2*border/num;let e=height-border;endCube=new Cube,endCube.i=num+1,endCube.j=num+1,endCube.x=0,endCube.y=0;let o=random(360),t=random(90,100),r=random(90,100);endCube.color=[o,t,r],selected=endCube;for(let o=0;o<num;o++){let t=border,r=[];for(let l=0;l<num;l++){let i=new Cube;i.i=o,i.j=l,i.x=t,i.y=e,i.image=imgArray[index(o,l)];let n=random(360),s=random(90,100),c=random(90,100);i.color=[n,s,c],r.push(i),t+=singleBoxSize,t+=space}cubes.push(r),e-=singleBoxSize+space}print(cubes)}function changeSelect(e,o,t){if((selected.i!=e||selected.j!=o)&&t){e!=endCube.i||o!=endCube.j?(selected.i==endCube.i&&selected.j==endCube.j||prevSelected.push(selected),selected=cubes[e][o]):(prevSelected.push(selected),selected=endCube);let t=!1;for(let r=0;r<prevSelected.length;r++){const l=prevSelected[r];if(l.i==e&&l.j==o){t=!0,selected.rotation=prevSelected[r].rotation,prevSelected.splice(r,1);break}}t||(selected.rotation=0)}}function drawBoxes(){translate(-width/2+singleBoxSize/2+border,height/2-singleBoxSize/2-border,-singleBoxSize/2);for(let e=0;e<num;e++){for(let o=0;o<num;o++){if(deleteNormal&&imgArray.length==index(e,o)&&2==selMode)return;if(o==maxCubes)break;if(mouseX>cubes[e][o].x&&mouseX<=cubes[e][o].x+singleBoxSize&&mouseY>cubes[e][o].y-singleBoxSize&&mouseY<=cubes[e][o].y)selected.i==e&&selected.j==o||changeSelect(e,o,recording),selected.rotation<rotation?selected.rotation+=speed:selected.rotation=rotation,1==rotationSide?(rotateY(selected.rotation),1==selMode?fill(lerpColor(color(selected.color),color(selectColor),selected.rotation/rotation)):index(e,o)<imgArray.length&&2==selMode?texture(selected.image):fill(lerpColor(color(selectColor),color(selected.color),selected.rotation/rotation)),box(singleBoxSize),rotateY(-selected.rotation)):(rotateX(selected.rotation),1==selMode?fill(lerpColor(color(selected.color),color(selectColor),selected.rotation/rotation)):index(e,o)<imgArray.length&&2==selMode?texture(selected.image):fill(lerpColor(color(selectColor),color(selected.color),selected.rotation/rotation)),box(singleBoxSize),rotateX(-selected.rotation)),translate(singleBoxSize+space,0,0);else{if(selected.i==e&&selected.j==o){changeSelect(num+1,num+1,!0),o--;continue}let t=-1;for(let r=0;r<prevSelected.length;r++){const l=prevSelected[r];l.i==e&&l.j==o&&(t=r)}if(-1==t){1==selMode?fill(cubes[e][o].color):index(e,o)<imgArray.length&&2==selMode?texture(cubes[e][o].image):fill(selectColor),box(singleBoxSize),translate(singleBoxSize+space,0,0);continue}1==rotationSide?(rotateY(prevSelected[t].rotation),1==selMode?fill(lerpColor(color(cubes[e][o].color),color(selectColor),prevSelected[v].rotation/rotation)):index(e,o)<imgArray.length&&2==selMode?texture(cubes[e][o].image):fill(lerpColor(color(selectColor),color(cubes[e][o].color),prevSelected[t].rotation/rotation)),box(singleBoxSize),rotateY(-prevSelected[t].rotation)):(rotateX(prevSelected[t].rotation),1==selMode?fill(lerpColor(color(cubes[e][o].color),color(selectColor),prevSelected[t].rotation/rotation)):index(e,o)<imgArray.length&&2==selMode?texture(cubes[e][o].image):fill(lerpColor(color(selectColor),color(cubes[e][o].color),prevSelected[t].rotation/rotation)),box(singleBoxSize),rotateX(-prevSelected[t].rotation)),prevSelected[t].rotation>0?prevSelected[t].rotation-=speed*backMult:prevSelected.splice(t,1),translate(singleBoxSize+space,0,0)}}-1!=maxCubes?translate(-singleBoxSize*maxCubes+-space*maxCubes,-(singleBoxSize+space),0):translate(-singleBoxSize*num+-space*num,-(singleBoxSize+space),0)}}function draw(){run&&(background(bkg),drawBoxes())}
var num = 3;
var rotation = 270;
var matrixSize = 500;
var space = 20;
var speed = 5;
var backMult = .2;
var bkg = 255;
var selectColor = [0,10,0];
var rotationSide = 0;
var border = 30;
var maxCubes = -1;
var selMode = 2;
var resDirectory = "resources";
var resExt = ".png";
var imgNumber = 5;
var deleteNormal = false;